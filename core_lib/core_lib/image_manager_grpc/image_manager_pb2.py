# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: image_manager.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='image_manager.proto',
  package='image_processor',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x13image_manager.proto\x12\x0fimage_processor\"\x14\n\x04Uuid\x12\x0c\n\x04uuid\x18\x01 \x01(\t\"5\n\x05Image\x12\r\n\x05image\x18\x01 \x01(\x0c\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x0c\n\x04uuid\x18\x03 \x01(\t\"\x17\n\x04Ping\x12\x0f\n\x07message\x18\x01 \x01(\t\"\x17\n\x04Pong\x12\x0f\n\x07message\x18\x01 \x01(\t2\x81\x01\n\x0cImageManager\x12\x39\n\x04\x62lur\x12\x15.image_processor.Uuid\x1a\x16.image_processor.Image\"\x00\x30\x01\x12\x36\n\x04ping\x12\x15.image_processor.Ping\x1a\x15.image_processor.Pong\"\x00\x62\x06proto3')
)




_UUID = _descriptor.Descriptor(
  name='Uuid',
  full_name='image_processor.Uuid',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='image_processor.Uuid.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=60,
)


_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='image_processor.Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image', full_name='image_processor.Image.image', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='success', full_name='image_processor.Image.success', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='uuid', full_name='image_processor.Image.uuid', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=115,
)


_PING = _descriptor.Descriptor(
  name='Ping',
  full_name='image_processor.Ping',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='image_processor.Ping.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=117,
  serialized_end=140,
)


_PONG = _descriptor.Descriptor(
  name='Pong',
  full_name='image_processor.Pong',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='image_processor.Pong.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=142,
  serialized_end=165,
)

DESCRIPTOR.message_types_by_name['Uuid'] = _UUID
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['Ping'] = _PING
DESCRIPTOR.message_types_by_name['Pong'] = _PONG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Uuid = _reflection.GeneratedProtocolMessageType('Uuid', (_message.Message,), dict(
  DESCRIPTOR = _UUID,
  __module__ = 'image_manager_pb2'
  # @@protoc_insertion_point(class_scope:image_processor.Uuid)
  ))
_sym_db.RegisterMessage(Uuid)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), dict(
  DESCRIPTOR = _IMAGE,
  __module__ = 'image_manager_pb2'
  # @@protoc_insertion_point(class_scope:image_processor.Image)
  ))
_sym_db.RegisterMessage(Image)

Ping = _reflection.GeneratedProtocolMessageType('Ping', (_message.Message,), dict(
  DESCRIPTOR = _PING,
  __module__ = 'image_manager_pb2'
  # @@protoc_insertion_point(class_scope:image_processor.Ping)
  ))
_sym_db.RegisterMessage(Ping)

Pong = _reflection.GeneratedProtocolMessageType('Pong', (_message.Message,), dict(
  DESCRIPTOR = _PONG,
  __module__ = 'image_manager_pb2'
  # @@protoc_insertion_point(class_scope:image_processor.Pong)
  ))
_sym_db.RegisterMessage(Pong)



_IMAGEMANAGER = _descriptor.ServiceDescriptor(
  name='ImageManager',
  full_name='image_processor.ImageManager',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=168,
  serialized_end=297,
  methods=[
  _descriptor.MethodDescriptor(
    name='blur',
    full_name='image_processor.ImageManager.blur',
    index=0,
    containing_service=None,
    input_type=_UUID,
    output_type=_IMAGE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ping',
    full_name='image_processor.ImageManager.ping',
    index=1,
    containing_service=None,
    input_type=_PING,
    output_type=_PONG,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_IMAGEMANAGER)

DESCRIPTOR.services_by_name['ImageManager'] = _IMAGEMANAGER

# @@protoc_insertion_point(module_scope)
